{"ast":null,"code":"var _jsxFileName = \"/home/victor/Webpage2.0/frontEnd/src/Header/SimpleSnackbar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SimpleSnackbar(Props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: Props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      message: \"Note archived\",\n      action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          size: \"small\",\n          onClick: handleClose,\n          children: \"UNDO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SimpleSnackbar, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = SimpleSnackbar;\nexport default SimpleSnackbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleSnackbar\");","map":{"version":3,"sources":["/home/victor/Webpage2.0/frontEnd/src/Header/SimpleSnackbar.js"],"names":["React","Button","Snackbar","IconButton","CloseIcon","SimpleSnackbar","Props","open","setOpen","useState","handleClick","handleClose","event","reason","value","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAQA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA,gBAA+BJ,KAAK,CAACQ;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAET,IALR;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAEI,WAPX;AAQE,MAAA,OAAO,EAAC,eARV;AASE,MAAA,MAAM,eACJ,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,IAAI,EAAC,OAA/B;AAAuC,UAAA,OAAO,EAAEA,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,wBAAW,OAApC;AAA4C,UAAA,KAAK,EAAC,SAAlD;AAA4D,UAAA,OAAO,EAAEA,WAArE;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAxCMN,c;;KAAAA,c;AA0CT,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nfunction SimpleSnackbar(Props) {\n    const [open, setOpen] = React.useState(false);\n  \n    const handleClick = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      setOpen(false);\n    };\n  \n    return (\n      <div>\n        <Button onClick={handleClick}>{Props.value}</Button>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={6000}\n          onClose={handleClose}\n          message=\"Note archived\"\n          action={\n            <React.Fragment>\n              <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n                UNDO\n              </Button>\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </React.Fragment>\n          }\n        />\n      </div>\n    );\n  }\n\nexport default SimpleSnackbar;"]},"metadata":{},"sourceType":"module"}